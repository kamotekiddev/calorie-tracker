generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts            Account[]
  calorie_intake      CalorieIntake[]
  user_plans          Plan[]          @relation("user_plans")
  currently_used_plan Plan?           @relation("used_plan")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Plan {
  id              String   @id @default(uuid())
  target_calories Int
  name            String
  user_id         String
  used_by_id      String?  @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user    User  @relation("user_plans", fields: [user_id], references: [id])
  used_by User? @relation("used_plan", fields: [used_by_id], references: [id])
}

model CalorieIntake {
  id          String   @id @default(uuid())
  calories    Int
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user_id String
  User    User   @relation(fields: [user_id], references: [id])
}
